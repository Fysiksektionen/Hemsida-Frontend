// 1. Include functions first (so you can manipulate colors, SVGs, calc, etc)
@import "../node_modules/bootstrap/scss/functions";

// 2. Include any default variable overrides here
$line-height-base: 1.75;

$grid-breakpoints: (
        xs: 0,
        sm: 576px,
        md: 768px,
        lg: 992px,
        xl: 1200px,
        xxl: 1500px
);

$container-max-widths: (
        sm: 540px,
        md: 720px,
        lg: 960px,
        xl: 1140px,
        xxl: 1400px
);

$spacer: 1rem;
$spacers: (
        0: 0,
        '05': ($spacer * 0.125),
        1: ($spacer * .25),
        2: ($spacer * .5),
        3: $spacer,
        4: ($spacer * 1.5),
        45: ($spacer * 2.25),
        5: ($spacer * 3),
        6: ($spacer * 5)
);

$F-darkest-gray: #141414;
$F-dark-gray: #181818;
$F-lightest-gray: #F8F8F8;
$F-darkest-blue: #062432;
$F-dark-blue: #093144;
$F-gray: #D4D4D4;
$F-red: #CF2927;
$F-indigo: #4148A4;
$F-turquoise: #01A9C7;
$F-orange: #FF642B;

$primary: $F-orange;
$body-color: $F-dark-gray;

// 3. Include remainder of required Bootstrap stylesheets
@import "../node_modules/bootstrap/scss/variables";
@import "../node_modules/bootstrap/scss/mixins";

// Create your own map
$custom-colors: (
    F-darkest-gray: $F-darkest-gray,
    F-dark-gray: $F-dark-gray,
    F-lightest-gray: $F-lightest-gray,
    F-darkest-blue: $F-darkest-blue,
    F-dark-blue: $F-dark-blue,
    F-gray: $F-gray,
    F-red: $F-red,
    F-indigo: $F-indigo,
    F-turquoise: $F-turquoise,
    F-orange: $F-orange,
    white: $white,
    black: $black
);

// Merge the maps
$theme-colors: map-merge($theme-colors, $custom-colors);

// 4. Include any optional Bootstrap components as you like
@import "../node_modules/bootstrap/scss/bootstrap";

// 5. Add additional custom scss

.flex-truncate {
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
    min-width: 0;
}

@each $breakpoint in map-keys($grid-breakpoints) {
    @include media-breakpoint-up($breakpoint) {
        $infix: breakpoint-infix($breakpoint, $grid-breakpoints);

        .hidden#{$infix} {
            visibility: hidden !important;
        }
        .visible#{$infix} {
            visibility: visible !important;
        }

        @for $i from 1 through $grid-columns {
            .zoom#{$infix}-#{$i} {
                zoom: $i / $grid-columns;
            }
        }
    }
}

.normal-cursor {
    cursor: default;
}

.pointer-cursor {
    cursor: pointer;
}

.darken-on-hover:hover {
    filter: brightness(90%);
}

.lighten-on-hover:hover {
    filter: brightness(110%);
}

.show-children-on-hover:hover .show-on-parent-hover {
    visibility: visible;
}

.show-on-parent-hover {
    visibility: hidden;
}

.adminnav {
    overflow: hidden;
    a {
        text-decoration: none;
        border-bottom: 5px solid transparent;
        &:hover {
            border-bottom: 5px solid $primary;
        }
        &.active {
            border-bottom: 5px solid $primary;
        }
    }
}

.invisible-input {
    border: none;
    background: transparent;
    border-bottom: 1px solid #fff;
    outline: none;
    &:active {
        @extend .invisible-input
    }
}

h1 {
    font-size: 3.25em;
    font-weight: bolder;
}

h2 {
    font-size: 2em;
    font-weight: bolder;
}

h3 {
    font-size: 2em;
    font-weight: bold;
}

h4 {
    font-size: 1.5em;
    font-weight: bold;
}

h5 {
    font-size: 1.5em;
    font-style: italic;
}

$heading-sizes: (1, 2, 3, 4, 5);
@each $heading-size in $heading-sizes {
    .h#{$heading-size} {
        @extend h#{$heading-size};
    }
}

.nostyle {
    color: inherit;
    text-decoration: none;
    &:hover {
        text-decoration: none;
        color: inherit;
        cursor: pointer;
    }
}
